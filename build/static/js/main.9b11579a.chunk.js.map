{"version":3,"sources":["Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","API/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","Images/image.png","Components/Footer/Footer.jsx","App.js","index.js","Components/Footer/Footer.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","URL","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","toLocaleDateString","borderColor","fill","Countries","handleCountrychange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","idx","Footer","footerGrid","footerItem","href","icon","App","state","new_country","fetchedData","setState","this","src","CovidImage","image","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b11579a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2bxln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__4LMvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2XqFC\",\"card\":\"Cards_card__1ak5A\",\"infected\":\"Cards_infected__bZ078\",\"recovered\":\"Cards_recovered__1wTBM\",\"deaths\":\"Cards_deaths__1YvrA\"};","import React from \"react\";\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nimport styles from \"./Cards.module.css\";\n\nvar Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) return \"Loading..\";\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h6\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n\n            <Typography variant=\"body2\">Number of active cases</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n\n            <Typography variant=\"body2\">Number of recovered cases</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n\n            <Typography variant=\"body2\">Number of deaths</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst URL = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableURL = URL;\n\n  if (country) {\n    changeableURL = `${URL}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableURL);\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${URL}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${URL}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport { fetchDailyData } from \"../../API\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) =>\n          new Date(date).toLocaleDateString()\n        ),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.recovered),\n            label: \"Recovered\",\n            borderColor: \"green\",\n            backgroundColor: \"rgba(0, 255, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport { fetchCountries } from \"../../API\";\n\nimport styles from \"./CountryPicker.module.css\";\n\nconst Countries = ({ handleCountrychange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    console.log(countries);\n\n    fetchAPI();\n  }, [setCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountrychange(e.target.value)}\n      >\n        <option value=\"global\">Global</option>\n        {countries\n          ? countries.map((country, idx) => (\n              <option key={idx} value={country}>\n                {country}\n              </option>\n            ))\n          : null}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","export default __webpack_public_path__ + \"static/media/image.9cd982ef.png\";","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\n\nimport styles from \"./Footer.module.css\";\n\nconst Footer = () => {\n  return (\n    <Grid container spacing={2} className={styles.footerGrid}>\n      <Grid item xs={6} className={styles.footerItem}>\n        <Typography>Muhammad Danyal Jamil</Typography>\n      </Grid>\n      <Grid container item xs={6} spacing={2} className={styles.footerItem}>\n        <Grid item>\n          <a href=\"https://github.com/D3nii\">\n            <GitHubIcon className={styles.icon} />\n          </a>\n        </Grid>\n        <Grid item>\n          <a href=\"https://www.linkedin.com/in/d3ni/\">\n            <LinkedInIcon className={styles.icon} />\n          </a>\n        </Grid>\n        <Grid item>\n          <a href=\"https://www.facebook.com/d3nyal\">\n            <FacebookIcon className={styles.icon} />\n          </a>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport { Cards, Chart, CountryPicker } from \"./Components\";\nimport styles from \"./App.module.css\";\n\nimport { fetchData } from \"./API\";\nimport CovidImage from \"./Images/image.png\";\nimport Footer from \"./Components/Footer/Footer\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountrychange = async (new_country) => {\n    const fetchedData = await fetchData(new_country);\n\n    this.setState({ data: fetchedData, country: new_country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img src={CovidImage} className={styles.image} alt=\"Covid-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountrychange={this.handleCountrychange} />\n        <Chart data={data} country={country} />\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerGrid\":\"Footer_footerGrid__3Amdu\",\"footerItem\":\"Footer_footerItem__1YxWo\",\"icon\":\"Footer_icon__1HZM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}